language: generic

sudo: required  # required for docker
services:
    - docker  # install a copy of docker

before_install:
    - docker build -t ${DOCKER_ID}/fib-react-docker-nginx-postgres-redis -f ./client/Dockerfile.dev ./client

script:
    - docker run -e CI=true ${DOCKER_ID}/fib-react-docker-nginx-postgres-redis npm run test -- --coverage

after_success:
    # building production docker images and the push them to docker hub
    - docker build -t ${DOCKER_ID}/multi-client ./client
    - docker build -t ${DOCKER_ID}/multi-nginx ./nginx
    - docker build -t ${DOCKER_ID}/multi-server ./server
    - docker build -t ${DOCKER_ID}/multi-worker ./worker
    # Login into the Docker CLI
    # Get docker password and pipe it to the next command
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_ID" --password-stdin
    # Take the images and push them to docker hub
    - docker push ${DOCKER_ID}/multi-client
    - docker push ${DOCKER_ID}/multi-nginx
    - docker push ${DOCKER_ID}/multi-server
    - docker push ${DOCKER_ID}/multi-worker

# deploy to AWS Elastic Beanstalk with multi docker images with Dockerrun.aws.json
deploy:
    # edge: true
    provider: elasticbeanstalk
    region: "us-east-2"
    app: "multi-docker"
    env: "MultiDocker-env"
    bucket_name: "elasticbeanstalk-us-east-2-470656852239"   # s3 bucket name from s3 storage services
    bucket_path: "multi-docker"
    on:
        branch: master  # every time code is pushed or merged to the master branch
    access_key_id: $AWS_ACCESS_KEY   # AWS Access key for IAM user for the project
    secret_access_key:
        secure: "$AWS_SECRET_KEY"    # AWS secret key for IAM user for the project
